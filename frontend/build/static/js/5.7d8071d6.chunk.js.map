{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/shared/Footer.js","components/shared/Navigation.js","components/shared/Header.js","components/pages/blog/index.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","__webpack_require__","d","__webpack_exports__","FooterContainer","styled","div","_templateObject","Footer","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Nav","Navigation","react_default","react_router_dom","to","href","HeaderContainer","Header_templateObject","Header","_useState","useState","_useState2","slicedToArray","toggleNav","setToggleNav","Fragment","shared_Navigation","onClick","src","alt","Container","About","_shared_Header__WEBPACK_IMPORTED_MODULE_3__","_shared_Footer__WEBPACK_IMPORTED_MODULE_4__"],"mappings":"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","file":"static/js/5.7d8071d6.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterContainer = styled.div`\n  height: 80px;\n  padding: 30px 0;\n\n  @media (max-width: 768px) {\n    height: 60px;\n    padding: 20px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n`;\n\nfunction Footer() {\n  return (\n    <FooterContainer>\n      <p>©2019 Pendulum Digital Ltd.</p>\n    </FooterContainer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Nav = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: #00d2c8;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  div {\n    margin-top: 164px;\n    padding: 10px;\n    text-align: center;\n  }\n\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 36px;\n  }\n\n  li {\n    padding: 20px 0 0 0;\n  }\n\n  a {\n    color: #28283c;\n    text-decoration: none;\n  }\n`;\n\nfunction Navigation() {\n  return (\n    <Nav>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n          <li>\n            <a href=\"mailto:digital@pendulum.ai\">Contact</a>\n          </li>\n        </ul>\n      </div>\n    </Nav>\n  );\n}\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Navigation from \"./Navigation\";\n\nconst HeaderContainer = styled.div`\n  position: relative;\n  z-index: 2000;\n  height: 164px;\n  padding: 30px 0;\n\n  @media (max-width: 768px) {\n    height: 124px;\n    padding: 20px 0;\n  }\n\n  button {\n    float: right;\n    background: transparent;\n    border: 0;\n    cursor: pointer;\n    padding: 0;\n\n    span {\n      display: block;\n      width: 30px;\n      height: 3px;\n      margin-bottom: 7px;\n      background-color: #28283c;\n    }\n  }\n\n  img {\n    width: 120px;\n\n    @media (max-width: 768px) {\n      width: 100px;\n    }\n  }\n`;\n\nfunction Header() {\n  const [toggleNav, setToggleNav] = useState(false);\n\n  const toggleNavState = () => {\n    setToggleNav(!toggleNav);\n  };\n\n  return (\n    <>\n      {toggleNav && <Navigation />}\n      <HeaderContainer>\n        <button onClick={toggleNavState}>\n          <span></span>\n          <span></span>\n          <span></span>\n        </button>\n        <img src=\"img/logo.svg\" alt=\"Pendulum - Artificial Intelligence\" />\n      </HeaderContainer>\n    </>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Header from \"../../shared/Header\";\nimport Footer from \"../../shared/Footer\";\n\nconst Container = styled.div`\n  max-width: 800px;\n  padding: 0 10px;\n`;\n\nfunction About() {\n  return (\n    <Container>\n      <Header />\n      <h1>What is a Chatbot?</h1>\n      <p>\n        If you look up the definition of the word ‘chatbot’, you get the below\n        description:\n      </p>\n      <p>\n        <strong>\n          chatbot\n          <br />\n          ˈtʃatbɒt/\n        </strong>\n        <br />\n        <i>noun</i>\n      </p>\n      <p>\n        <strong>\n          \"a computer program designed to simulate conversation with human\n          users, especially over the Internet\"\n        </strong>\n      </p>\n      <p>\n        That definition alone is vague and can cover many types of computer\n        programmes that sparsely converse with the end user. You could argue\n        that some of the old text-based games such as Adventure or Zork are\n        chatbots. These programmes have a type of conversation with the end\n        user, but in a closed capacity - so can they really be considered\n        ‘chatbots’?\n      </p>\n      <p>\n        These Interactive Fiction applications have been around since the 60's\n        where 'ELIZA' paved the way for human-computer interaction and\n        kick-started machine learning and artificial intelligence beyond the\n        work completed by Alan Turing in the 50's. Since Turing published his\n        famous article \"Computing Machinery and Intelligence\", computing power,\n        understanding and cost has significantly changed into the landscape we\n        have today. This has opened the door to the rise of the modern chatbot.\n      </p>\n      <h2>Chatbots today</h2>\n      <p>\n        In simple terms, a Chatbot is really no more than an i/o interface\n        (text/speech), and an application that processes that information. The\n        application part is where all the magic happens; it’s the brain.\n        Examples include Dialogflow, Microsoft LUIS, Wit.ai and IBM Cloud\n        (Watson). These all use machine learning and NLP to power their systems,\n        which give developers instant access to cutting edge technology without\n        doing the heavy lifting.\n      </p>\n      <p>\n        There is a 3rd part to the way chatbots work, and that is a connection\n        to an existing system or 'business logic' - imagine if you could talk to\n        Siri, but she couldn’t perform any of that actions you want her to?\n        Imagine trying to book a flight with a travel agent and you can’t?\n        Chatbots need to be able to carry out the actions they are designed to\n        do.\n      </p>\n      <h2>Why did they become popular?</h2>\n      <p>\n        A quick search of Google Trends for the term \"chatbot\", you'll see a\n        notable moment in the March/April of 2016. This is when Facebook\n        launched a Bot platform through Facebook Messenger that included an API\n        for developers, marketers and entrepreneurs to use for their own needs.\n      </p>\n\n      <p>\n        When Facebook launched this platform, it connected the millions of users\n        from across the world into one place. Suddenly the thought of developing\n        and executing a chatbot wasn’t just limited to those custom widgets you\n        see on websites, or custom integrations costing thousands to develop. It\n        was a simple solution to a common problem: accessibility.\n      </p>\n      <h2>What they look like</h2>\n      <p>\n        The integrations available today are vast, and don’t just stop at\n        Facebook. Twitter, Slack, Viber, Skype, Kik, Alexa, Google Home etc. are\n        all interfaces and are direct access points to customers or potential\n        customers. People are using these platforms daily, so there’s no need to\n        create a new space for them to converse with your brand.\n      </p>\n      <p>\n        Chatbots have different places to live, the execution of them is still\n        really in its infancy, and you can argue that some 'chatbots' are not\n        chatbots at all. Without going into too much detail (we’ll cover this in\n        a future post), there a several different types of 'chatbot' out there;\n        'utility', '3rd space', 'conditional logic' or 'assistant' chatbots. The\n        lines sometime blur between each, but some consider an auto-responder on\n        Twitter to be a ‘chatbot’, which broadens the spectrum even further.\n      </p>\n      <p>\n        As the earlier definition suggests, a Chatbot uses conversation to\n        interact with the user. Fancy decision trees or 'flows' are barely\n        conversational; the bot tells you some information, gives you a couple\n        of choices to respond with, and you move further down the flow, until\n        (hopefully) you reach the end and achieve what you wanted. In this case,\n        there’s no real conversation going on. Of all the chatbots on the\n        market, this type of bot is the most popular as flows can be defined and\n        programmed to the Nth degree. There are pros and cons to this, but most\n        decision makers and developers find this as the 'go-to' execution.\n      </p>\n      <h2>Future of chatbots</h2>\n      <p>\n        If the input (conversation) is poor or doesn't make clear sense, the\n        chatbot will fall over. Humans are very good at picking up mistakes,\n        filling in the gaps and making assumptions of what people really mean\n        when they talk/text. Through the use of Machine Learning, chatbot\n        services will be able to start to fill in those gaps more efficiently\n        and correctly. This is where developments in Artificial Intelligence and\n        Machine Learning will add the most value.\n      </p>\n      <p>\n        Even though chatbots are still finding their feet, it only takes a\n        single, well executed and popular bot to take it to the mainstream. I\n        think\n      </p>\n      <Footer />\n    </Container>\n  );\n}\n\nexport default About;\n"],"sourceRoot":""}